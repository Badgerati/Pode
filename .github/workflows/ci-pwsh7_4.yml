name: Pode CI - pwsh 7.4

on:
  push:
    branches:
    - '*'
    - '!gh-pages'
  pull_request:
    branches:
    - '*'

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Check PowerShell version
      shell: pwsh
      run: |
        $PSVersionTable.PSVersion

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Install Invoke-Build
      shell: pwsh
      run: |
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Install-Module -Name InvokeBuild -RequiredVersion '5.10.4' -Force

    # For Windows
    - name: Download and extract PowerShell 7.4 (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Invoke-WebRequest -Uri "https://github.com/PowerShell/PowerShell/releases/download/v7.4.0/PowerShell-7.4.0-win-x64.zip" -OutFile "PowerShell-7.4.0-win-x64.zip"
        Expand-Archive -LiteralPath "PowerShell-7.4.0-win-x64.zip" -DestinationPath "C:\PowerShell-7.4.0"

    # For macOS
    - name: Download and extract PowerShell 7.4 (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
        curl -L "https://github.com/PowerShell/PowerShell/releases/download/v7.4.0/powershell-7.4.0-osx-x64.tar.gz" -o "powershell-7.4.0-osx-x64.tar.gz"
        mkdir -p ~/powershell/7.4.0
        tar -xzf powershell-7.4.0-osx-x64.tar.gz -C ~/powershell/7.4.0


    - name: Run Pester Tests (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        C:\PowerShell-7.4.0\pwsh.exe -Command {
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Invoke-Build Test
        }

    - name: Run Pester Tests (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
        ~/powershell/7.4.0/pwsh -Command {
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Invoke-Build Test
        }

    - name: Test docker builds (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        C:\PowerShell-7.4.0\pwsh.exe -Command {
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Invoke-Build DockerPack -Version '0.0.0'
        }

    - name: Test docker builds (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
        ~/powershell/7.4.0/pwsh -Command {
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Invoke-Build DockerPack -Version '0.0.0'
        }